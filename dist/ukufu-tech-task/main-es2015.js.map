{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/enums/cardinals.enum.ts","./src/app/core/enums/commands.enum.ts","./src/app/core/enums/events.enum.ts","./src/app/core/material.module.ts","./src/app/core/models/plateau.ts","./src/app/core/models/rover.ts","./src/app/core/services/app.service.ts","./src/app/core/services/plateau.service.ts","./src/app/core/services/rover.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/plateau/plateau-form/plateau-form.component.ts","./src/app/plateau/plateau-form/plateau-form.component.html","./src/app/plateau/plateau.module.ts","./src/app/rover/rover-form/rover-form.component.ts","./src/app/rover/rover-form/rover-form.component.html","./src/app/rover/rover.module.ts","./src/app/simulation/simulation.component.ts","./src/app/simulation/simulation.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACD;;;AAEtD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE,CAAC,CAAC;AAMzD,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACF;;;;AAQzC,MAAM,YAAY;IAwBvB,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAvB9C,UAAK,GAAG,iBAAiB,CAAC;QAI1B,WAAM,GAAU;YACd;gBACE,MAAM,EAAE;oBACN,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oBACrB,WAAW,EAAE,CAAC;iBACf;gBACD,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;gBAC1D,YAAY,EAAE,WAAW;aAC1B;YACD;gBACE,MAAM,EAAE;oBACN,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oBACrB,WAAW,EAAE,EAAE;iBAChB;gBACD,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;gBAC/D,YAAY,EAAE,YAAY;aAC3B;SACF,CAAC;IAE+C,CAAC;IAElD,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QACnB,qBAAqB;QACrB,oBAAoB;QAEpB,cAAc;IAChB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,4DAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,SAAS;QACP,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;YAC7B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;YAChC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;SACnC;IACH,CAAC;IAED,GAAG;QACD,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAC7C,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC/C;IACH,CAAC;;wEArDU,YAAY;4FAAZ,YAAY;QCTzB,2EAA+B;;6FDSlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACC;AAC+B;AACzB;AACG;AACD;AACA;AACL;AACqB;;;AAiBjE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAVJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4DAAU,CAAC,OAAO,EAAE;YACpB,4FAAuB;YACvB,oEAAc;YACd,qEAAgB;YAChB,qEAAa;YACb,gEAAW;SACZ;mIAIU,SAAS,mBAdL,2DAAY,EAAE,kEAAa,EAAE,qFAAmB,aAE7D,uEAAa;QACb,oEAAgB,gEAEhB,4FAAuB;QACvB,oEAAc;QACd,qEAAgB;QAChB,qEAAa;QACb,gEAAW;6FAKF,SAAS;cAfrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,EAAE,kEAAa,EAAE,qFAAmB,CAAC;gBAChE,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4DAAU,CAAC,OAAO,EAAE;oBACpB,4FAAuB;oBACvB,oEAAc;oBACd,qEAAgB;oBAChB,qEAAa;oBACb,gEAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACf;AACS;AACL;AACK;AACU;AACN;;AAOrD,MAAM,UAAU;IACrB,MAAM,CAAC,OAAO;QACZ,OAAO;YACL,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,CAAC,wEAAc,EAAE,oEAAY,CAAC;SAC1C,CAAC;IACJ,CAAC;;yFANU,UAAU;8IAAV,UAAU,kBAHZ,CAAC,4DAAY,EAAE,+DAAc,EAAE,qEAAgB,EAAE,kEAAmB,EAAE,0DAAW,CAAC;QACjF,+DAAc,EAAE,qEAAgB,EAAE,kEAAmB,EAAE,0DAAW;mIAEjE,UAAU,cAHX,4DAAY,EAAE,+DAAc,EAAE,qEAAgB,EAAE,kEAAmB,EAAE,0DAAW,aAChF,+DAAc,EAAE,qEAAgB,EAAE,kEAAmB,EAAE,0DAAW;6FAEjE,UAAU;cALtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC,4DAAY,EAAE,+DAAc,EAAE,qEAAgB,EAAE,kEAAmB,EAAE,0DAAW,CAAC;gBAC3F,OAAO,EAAE,CAAC,+DAAc,EAAE,qEAAgB,EAAE,kEAAmB,EAAE,0DAAW,CAAC;aAC9E;;;;;;;;;;;;;;ACZD;AAAA;AAAA,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,mCAAK;IACL,oCAAM;IACN,qCAAO;IACP,qCAAO;AACT,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;;;;;;;;;;;;;ACLD;AAAA;AAAA,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,iCAAK;IACL,mCAAO;IACP,kCAAM;AACR,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB;;;;;;;;;;;;;ACJD;AAAA;AAAA,IAAY,MAKX;AALD,WAAY,MAAM;IAChB,+CAAU;IACV,uDAAc;IACd,qDAAa;IACb,yDAAe;AACjB,CAAC,EALW,MAAM,KAAN,MAAM,QAKjB;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACc;AACN;AACI;AACA;AACF;AACF;AACW;AACP;AACE;AACA;;AAE7D,MAAM,eAAe,GAAG;IACtB,0EAAgB;IAChB,oEAAa;IACb,wEAAe;IACf,wEAAe;IACf,sEAAc;IACd,oEAAa;IACb,+EAAkB;IAClB,wEAAe;IACf,2EAAgB;IAChB,2EAAgB;CACjB,CAAC;AAOK,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAHhB,CAAC,4DAAY,EAAE,eAAe,CAAC;QAdxC,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,wEAAe;QACf,sEAAc;QACd,oEAAa;QACb,+EAAkB;QAClB,wEAAe;QACf,2EAAgB;QAChB,2EAAgB;mIAQL,cAAc,cAHf,4DAAY;QAdtB,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,wEAAe;QACf,sEAAc;QACd,oEAAa;QACb,+EAAkB;QAClB,wEAAe;QACf,2EAAgB;QAChB,2EAAgB,aAThB,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,wEAAe;QACf,sEAAc;QACd,oEAAa;QACb,+EAAkB;QAClB,wEAAe;QACf,2EAAgB;QAChB,2EAAgB;6FAQL,cAAc;cAL1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC,4DAAY,EAAE,eAAe,CAAC;gBACxC,OAAO,EAAE,CAAC,eAAe,CAAC;aAC3B;;;;;;;;;;;;;;AC1BD;AAAA;AAAO,MAAM,OAAO;IAUlB,YAAY,UAAkB;QAR9B,SAAI,GAAU;YACZ,UAAU,EAAE;gBACV,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;aACL;YACD,UAAU,EAAE,IAAI;SACjB,CAAC;QAGA,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,EAAE,EAAE,UAAU,CAAC,CAAC;IACjE,CAAC;CACF;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAkD;AACE;AAE7C,MAAM,KAAK;IAuBhB,YAAY,IAAY;QAjBxB,iBAAY,GAAW,EAAE,CAAC;QAC1B,gBAAW,GAAa,EAAE,CAAC;QAc3B,iBAAY,GAAW,IAAI,CAAC;QAG1B,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,qBAAQ,IAAI,CAAC,MAAM,CAAE,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IApBD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,WAAW;QACb,OAAO,+DAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAYM,cAAc,CAAC,GAAW;QAE/B,iCAAiC;QACjC,+BAA+B;QAE/B,MAAM,QAAQ,GAAG,6DAAQ,CAAC,GAAG,CAAC,CAAC;QAE/B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAElC,IAAI,QAAQ,KAAK,6DAAQ,CAAC,CAAC,EAAE;YAC3B,QAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;gBACjC,KAAK,+DAAS,CAAC,CAAC;oBACd,OAAO;wBACL,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;wBACnC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;qBACvC,CAAC;gBACJ,KAAK,+DAAS,CAAC,CAAC;oBACd,OAAO;wBACL,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;wBACnC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;qBACvC,CAAC;gBACJ,KAAK,+DAAS,CAAC,CAAC;oBACd,OAAO;wBACL,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;wBACnC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;qBACvC,CAAC;gBACJ,KAAK,+DAAS,CAAC,CAAC;oBACd,OAAO;wBACL,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;wBACnC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;qBACvC,CAAC;aACL;SACF;aAAM;YACL,MAAM,QAAQ,qBAAQ,IAAI,CAAC,QAAQ,CAAE,CAAC;YACtC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC;YAC5E,OAAO,QAAQ,CAAC;SACjB;IACH,CAAC;IAEM,MAAM,CAAC,GAAc;QAC1B,8CAA8C;QAE9C,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IACtB,CAAC;IAEO,cAAc,CAAC,MAAc;QACnC,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,OAAO,MAAM,GAAG,GAAG,CAAC;SACrB;aAAM,IAAI,MAAM,IAAI,GAAG,EAAE;YACxB,OAAO,MAAM,GAAG,GAAG,CAAC;SACrB;aAAM;YACL,OAAO,MAAM,CAAC;SACf;IACH,CAAC;CACF;;;;;;;;;;;;;AC3FD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACJ;AACO;;AAMvC,MAAM,UAAU;IAGrB;QAFA,WAAM,GAA4B,IAAI,oDAAe,CAAC,yDAAM,CAAC,UAAU,CAAC,CAAC;IAE1D,CAAC;;oEAHL,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACC;AAKE;;;AAKvC,MAAM,cAAc;IAGzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,YAAO,GAAG,IAAI,CAAC;IAE8B,CAAC;IAEvC,aAAa,CAAC,KAAa;QAChC,IAAI,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;YACpC,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,yDAAM,CAAC,cAAc,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEM,oBAAoB,CAAC,KAAa;QACvC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE;YAC9B,OAAO,KAAK,CAAC;SACd;aAAM,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE;YACzC,OAAO,KAAK;SACb;aAAI;YACH,OAAO,IAAI,CAAC;SACb;IACH,CAAC;;4EAvBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;AACV;;;;AAUjC,MAAM,YAAY;IAYvB,YAAoB,UAAsB,EAAU,cAA8B;QAA9D,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAVlF,cAAS,GAAY,EAAE,CAAC;IAU6D,CAAC;IARtF,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;IAChC,CAAC;IAED,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;IACrC,CAAC;IAIM,WAAW,CAAC,KAAa;QAC9B,MAAM,QAAQ,GAAG,IAAI,mDAAK,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QAE3D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QACtC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEM,WAAW,CAAC,EAAU;QAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAE3D,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAEM,oBAAoB,CAAC,KAAY;QACtC,qBAAqB;QACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnB,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE;YACjC,kCAAkC;YAClC,MAAM,YAAY,GAAc,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;YAE1C,IAAI,6DAAQ,CAAC,GAAG,CAAC,KAAK,6DAAQ,CAAC,CAAC,EAAE;gBAChC,yEAAyE;gBACzE,yCAAyC;gBAEzC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;oBAC1C,KAAK,CAAC,YAAY,GAAG,oCAAoC,CAAC;oBAC1D,OAAO,KAAK,CAAC;iBACd;gBAED,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;oBAC5C,KAAK,CAAC,YAAY,GAAG,6CAA6C,CAAC;oBACnE,OAAO,KAAK,CAAC;iBACd;aACF;YAED,kBAAkB;YAClB,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC5B;QACD,OAAO,CAAC,GAAG,CAAC,SAAS,KAAK,CAAC,EAAE,gCAAgC,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,YAAY,CAAC,KAAa;QAC/B,mDAAmD;QACnD,wBAAwB;QAExB,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;QAE5C,IACE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;YACnC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;YACnC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;YACnC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EACnC;YACA,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEM,cAAc,CAAC,KAAa;QACjC,iDAAiD;QACjD,wBAAwB;QAExB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3H,CAAC;;wEAtFU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AAGzB;;;;;;;;;;;;;ICUD,kEAAO;;;IAIP,iEAAM;;;IAIN,qEAAU;;ADVrD,MAAM,aAAa;IAIxB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,eAAe,KAAU,CAAC;IAE1B,QAAQ;QAEN,kDAAkD;QAElD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,QAAQ,GAAG,EAAE;gBACX,KAAK,8DAAM,CAAC,cAAc;oBACxB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,MAAM;gBACR,KAAK,8DAAM,CAAC,aAAa;oBACvB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,MAAM;gBACR,KAAK,8DAAM,CAAC,eAAe;oBACzB,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC;oBAC/B,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;;0EA9BU,aAAa;6FAAb,aAAa;;;;;;;;QCX1B,yEACI;QAAA,iFACI;QAAA,uEAAO;QAAA,2EAAe;QAAA,4DAAO;QACjC,4DAAc;QACd,yEACI;QAAA,8EACI;QAAA,kFACI;QAAA,iFAAgB;QAAA,6FAAkC;QAAA,4DAAiB;QACnE,oFAAmB;QAAA,sGAA0C;QAAA,4DAAoB;QACrF,4DAAkB;QAClB,oFACI;QAAA,gGACI;QAAA,+EACI;QAAA,2HAA0B;QAC1B,wFAAkD;QACtD,4DAAW;QACX,+EACI;QAAA,2HAA0B;QAC1B,uFAA4C;QAChD,4DAAW;QACX,4EACI;QAAA,2HAA0B;QAC1B,6EAAiC;QACrC,4DAAW;QACf,4DAAyB;QAC7B,4DAAmB;QACvB,4DAAW;QACf,4DAAM;QACV,4DAAM;;QAjBkC,2DAAe;QAAf,wEAAe;QACzB,0DAAmB;QAAnB,4EAAmB;QAInB,0DAAiB;QAAjB,0EAAiB;;6FDLlC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;kBAEE,uDAAS;mBAAC,SAAS;;kBACnB,uDAAS;mBAAC,aAAa;;;;;;;;;;;;;;AEb1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;;;;;;;;;;ICiCjE,0EACI;IAAA,uFACJ;IAAA,4DAAM;;;IACN,0EACI;IAAA,4FACJ;IAAA,4DAAM;;AD5Bf,MAAM,oBAAoB;IAO/B,YAAoB,EAAe,EAAU,cAA8B;QAAvD,OAAE,GAAF,EAAE,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAL3E,aAAQ,GAAG;YACT,CAAC,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/E,CAAC,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SAChF,CAAC;QAGA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ;QAEN,2BAA2B;QAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACzC,IAAI,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,KAAK,GAAG,EAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;aAC7C;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,sBAAsB;QACtB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,MAAM,MAAM,GAAW;YACrB,CAAC,EAAE,CAAC,CAAC;YACL,CAAC,EAAE,CAAC,CAAC;SACN,CAAC;QAEF,MAAM,OAAO,GAAY,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAEnE,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;;wFAlCU,oBAAoB;oGAApB,oBAAoB;QCXjC,yEACI;QAAA,uEAAsB;QAAA,2IAAgF;QAAA,gEAClG;QAAA,wGACJ;QAAA,4DAAI;QACJ,0EACI;QAAA,uEAAqB;QAAA,2EAAgB;QAAA,4DAAI;QACzC,yEACI;QAAA,yEACI;QAAA,wEAAuB;QAAA,uEAAW;QAAA,4DAAI;QACtC,0EACI;QAAA,kFACI;QAAA,2EAAgB;QAAA,6DAAC;QAAA,4DAAO;QACxB,uEACA;QAAA,4EAAgB;QAAA,6DAAC;QAAA,4DAAO;QAC5B,4DAAiB;QACjB,kFACI;QAAA,wEACA;QAAA,4EAAgB;QAAA,6DAAC;QAAA,4DAAO;QAC5B,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,wEAAuB;QAAA,wEAAY;QAAA,4DAAI;QACvC,0EACI;QAAA,kFACI;QAAA,2EAAgB;QAAA,6DAAC;QAAA,4DAAO;QACxB,wEACA;QAAA,4EAAgB;QAAA,6DAAC;QAAA,4DAAO;QAC5B,4DAAiB;QACjB,kFACI;QAAA,wEACA;QAAA,4EAAgB;QAAA,6DAAC;QAAA,4DAAO;QAC5B,4DAAiB;QACrB,4DAAM;QACN,mHACI;QAEJ,mHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,8EAA2F;QAAnF,6IAAS,kBAAc,IAAC;QAA2D,gEAAI;QAAA,4DAAS;QAC5G,4DAAM;QACV,4DAAO;QACX,4DAAM;;QA1CI,0DAAkB;QAAlB,+EAAkB;QAQqC,2DAAW;QAAX,oEAAW;QAIX,0DAAW;QAAX,oEAAW;QAkBhC,2DAAwF;QAAxF,0JAAwF;QAGxF,0DAAqC;QAArC,mGAAqC;QAMpC,0DAAwB;QAAxB,qFAAwB;;6FDhCxD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAC8B;AAC5B;;;AAO1C,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBAHf,CAAC,4DAAY,EAAE,4DAAU,CAAC,OAAO,EAAE,CAAC;mIAGlC,aAAa,mBAJT,yFAAoB,aACzB,4DAAY,EAAE,yEACd,yFAAoB;6FAEnB,aAAa;cALzB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,yFAAoB,CAAC;gBACpC,OAAO,EAAE,CAAC,4DAAY,EAAE,4DAAU,CAAC,OAAO,EAAE,CAAC;gBAC7C,OAAO,EAAE,CAAC,yFAAoB,CAAC;aAChC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;AACrB;AAGN;;;;;;;;;;;;;;;ICHlD,wEACI;IAAA,yEACI;IAAA,uEAAqB;IAAA,uDAAkB;IAAA,4DAAI;IAC3C,sEAA+G;IACnH,4DAAM;IACV,qEAAe;;;;;;IAHc,0DAAkB;IAAlB,yFAAkB;IACzB,0DAAiC;IAAjC,iFAAiC;;;IA2B/B,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFwC,oFAAwB;IACzE,0DACJ;IADI,4FACJ;;;IAIZ,2EAAsE;IAAA,uDACA;IAAA,4DAAO;;;IADP,0DACA;IADA,0LACA;;;;;IAxBlF,0EACI;IAAA,2EACI;IAAA,oEAAG;IAAA,6FAAkC;IAAA,4DAAI;IACzC,0EACI;IAAA,0EACI;IAAA,iFACI;IAAA,2EAAgB;IAAA,4DAAC;IAAA,4DAAO;IACxB,uEACA;IAAA,4EAAgB;IAAA,6DAAC;IAAA,4DAAO;IAC5B,4DAAiB;IACjB,kFACI;IAAA,wEACA;IAAA,4EAAgB;IAAA,6DAAC;IAAA,4DAAO;IAC5B,4DAAiB;IACjB,qFACI;IAAA,6EAAW;IAAA,uEAAW;IAAA,4DAAY;IAClC,kFACI;IAAA,6IACI;IAER,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;IACN,iIAAsE;IAEtE,2EACI;IAAA,qFACI;IAAA,wEAEJ;IAAA,4DAAiB;IACjB,2EACI;IAAA,6EAAsF;IAA3C,sXAA0C;IAAC,6DAAC;IAAA,4DAAS;IAChG,6EAAoF;IAAzC,4WAAmC,GAAG,KAAE;IAAC,6DAAC;IAAA,4DAAS;IAC9F,6EAAoF;IAAzC,4WAAmC,GAAG,KAAE;IAAC,6DAAC;IAAA,4DAAS;IAC9F,6EAAoF;IAAzC,4WAAmC,GAAG,KAAE;IAAC,6DAAC;IAAA,4DAAS;IAClG,4DAAM;IACV,4DAAM;IACN,uEACI;IAAA,4EAA8G;IAAA,2FAEzF;IAAA,4DAAO;IAChC,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,2EACI;IAAA,8EAAiF;IAAzC,oXAAwC;IAAC,kEAAM;IAAA,4DAAS;IACpG,4DAAM;IACN,8EAAiC;IACrC,4DAAM;;;;IA/CuB,0DAAkB;IAAlB,8EAAkB;IAgBX,2DAAwC;IAAxC,2FAAwC;IAM1D,0DAAgC;IAAhC,6FAAgC;IAeR,2DAAmF;IAAnF,oNAAmF;;ADxC1H,MAAM,kBAAkB;IAkB7B,YAAoB,EAAe,EAAU,YAA0B;QAAnD,OAAE,GAAF,EAAE,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAjBvE,eAAU,GAAgB,EAAE,CAAC;QAE7B,cAAS,GAAG,oEAAS,CAAC;QAEtB,oBAAe,GAAU,EAAE,CAAC;IAa8C,CAAC;IAX3E,IAAI,YAAY;QACd,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;YAC7B,IAAI,CAAC,CAAC,CAAC,KAAK;gBAAE,OAAO,KAAK,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;IACnC,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC3C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,YAAY;QACV,gEAAgE;QAEhE,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,oEAAS,CAAC,EAAE;YACtC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE;gBACf,oCAAoC;gBACpC,MAAM,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,oEAAS,CAAC,GAAG,CAAC,EAAE,CAAC;gBACjD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS;QACP,MAAM,QAAQ,GAAG;YACf,CAAC,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/E,CAAC,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/E,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;SAC5F,CAAC;QAEF,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAErC,mDAAmD;QACnD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAClC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE;gBAClB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gBACvE,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,EAAE;oBACV,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnC;qBAAM;oBACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;iBACtB;aACF;QACH,CAAC,CAAC,CAAC;QAEH,iCAAiC;QACjC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAS,EAAE,EAAE;YACjE,IAAI,CAAC,EAAE;gBACL,MAAM,KAAK,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC9B,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;aACrE;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uBAAuB,CAAC,KAAa;QACnC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,yBAAyB,CAAC,KAAa;QACrC,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM;YAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,kBAAkB,CAAC,KAAa,EAAE,GAAW;QAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,YAAY;QACV,mCAAmC;QACnC,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,8DAAM,CAAC,aAAa,CAAC,CAAC;SACrD;IACH,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;QAEjC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;YAChC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAEvD,MAAM,SAAS,GAAW;gBACxB,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,WAAW,EAAE;gBAC9D,YAAY,EAAE,YAAY;aAC3B,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YAEpC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK;gBAAE,OAAO;SACpB;QACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,8DAAM,CAAC,aAAa,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;IACd,CAAC;;oFApHU,kBAAkB;kGAAlB,kBAAkB;QCb/B,yEACI;QAAA,uEAAsB;QAAA,4FAAiC;QAAA,4DAAI;QAC3D,gIACI;QAKJ,yEACI;QAAA,4EAA4E;QAAjD,0IAAS,0BAAsB,IAAC;QAAiB,kEAAO;QAAA,4DAAS;QAC5F,4EAA6F;QAAzB,0IAAS,kBAAc,IAAC;QAAC,+DAAI;QAAA,4DAAS;QAC9G,4DAAM;QACV,4DAAM;QAEN,2MACI;;QAbc,0DAA4C;QAA5C,mFAA4C;QAQ5B,0DAA0B;QAA1B,uFAA0B;;6FDG/C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACwB;AACtB;;;AAO1C,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAHb,CAAC,4DAAY,EAAE,4DAAU,CAAC,OAAO,EAAE,CAAC;mIAGlC,WAAW,mBAJP,mFAAkB,aACvB,4DAAY,EAAE,yEACd,mFAAkB;6FAEjB,WAAW;cALvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,mFAAkB,CAAC;gBAClC,OAAO,EAAE,CAAC,4DAAY,EAAE,4DAAU,CAAC,OAAO,EAAE,CAAC;gBAC7C,OAAO,EAAE,CAAC,mFAAkB,CAAC;aAC9B;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACR;AAGN;;;;;;;;;;ICF3C,wEACI;IAAA,sEAAgI;IACpI,qEAAe;;;;;;IADG,0DAAqC;IAArC,iFAAqC;;;;IAIvD,4EAA6F;IAA3C,kUAA6B;IAAc,gEAAK;IAAA,4DAAS;;;;IAC3G,4EAA8F;IAAzC,+TAAyB;IAAgB,gEAAK;IAAA,4DAAS;;;IAuBpG,oEACI;IAAA,2EAAyB;IAAA,kEAAO;IAAA,4DAAO;IAAA,gEACvC;IAAA,uEAAM;IAAA,sFAA2B;IAAA,4DAAO;IAAA,gEAC5C;IAAA,4DAAI;;;IACJ,oEACI;IAAA,2EAAyB;IAAA,kEAAO;IAAA,4DAAO;IAAA,gEACvC;IAAA,2EAA0B;IAAA,uDACmB;IAAA,4DAAO;IACxD,4DAAI;;;;IAF0B,0DACmB;IADnB,2LACmB;;;IAEjD,oEACI;IAAA,2EAAyB;IAAA,yEAAc;IAAA,4DAAO;IAAA,gEAC9C;IAAA,uEAAM;IAAA,uDAAiG;IAAA,4DAAO;IAAA,gEAC9G;IAAA,2EAAwB;IAAA,uDAA2C;IAAA,4DAAO;IAC9E,4DAAI;;;;;;IAFM,0DAAiG;IAAjG,2LAAiG;IAC/E,0DAA2C;IAA3C,kHAA2C;;;IA9BnF,2EACI;IAAA,kFACI;IAAA,iFAAgB;IAAA,uDAAoB;IAAA,4DAAiB;IACrD,oFAAmB;IAAA,kEAAO;IAAA,4DAAoB;IAClD,4DAAkB;IAClB,mFACI;IAAA,0EACI;IAAA,sEACI;IAAA,oEACI;IAAA,4EAAyB;IAAA,uEAAW;IAAA,4DAAO;IAAA,iEAC3C;IAAA,wEAAM;IAAA,wDAA+D;IAAA,4DAAO;IAAA,iEAC5E;IAAA,4EAAyB;IAAA,wEAAY;IAAA,4DAAO;IAAA,iEAC5C;IAAA,wEAAM;IAAA,wDACsB;IAAA,4DAAO;IACvC,4DAAI;IACR,4DAAM;IACV,4DAAM;IACN,uEACI;IAAA,4HACI;IAGJ,4HACI;IAIJ,4HACI;IAIR,4DAAM;IACV,4DAAmB;IACvB,4DAAW;;;;;IAhCa,0DAAoB;IAApB,8FAAoB;IAQlB,2DAA+D;IAA/D,iJAA+D;IAE/D,0DACsB;IADtB,mNACsB;IAKjC,0DAA0C;IAA1C,+GAA0C;IAI1C,0DAAiC;IAAjC,sGAAiC;IAKjC,0DAA2E;IAA3E,2JAA2E;;AD3BvF,MAAM,mBAAmB;IAa9B,YAAoB,cAA8B,EAAU,YAA0B;QAAlE,mBAAc,GAAd,cAAc,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAZtF,gBAAW,GAAU,IAAI,CAAC;QAE1B,cAAS,GAAG,oEAAS,CAAC;QAEtB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,oBAAe,GAAG,KAAK,CAAC;QACxB,mBAAc,GAAG,KAAK,CAAC;IAMkE,CAAC;IAJ1F,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;IACrC,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACzC,IAAI,GAAG,KAAK,8DAAM,CAAC,aAAa,EAAE;gBAChC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aACtD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,MAAe;QAChC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YACtC,MAAM,UAAU,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;YAClD,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAE1D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAChC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,CAAC,CAAC,CAAC,MAAM;gBAAE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAEnC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,8DAAM,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;;sFAnDU,mBAAmB;mGAAnB,mBAAmB;QCbhC,yEACI;QAAA,yEACI;QAAA,iIACI;QAER,4DAAM;QACN,yEACI;QAAA,qHAA6F;QAC7F,qHAA8F;QAClG,4DAAM;QACV,4DAAM;QAEN,6MACI;;QAXkB,0DAAiD;QAAjD,oFAAiD;QAKvD,0DAAsB;QAAtB,oFAAsB;QACtB,0DAA0B;QAA1B,wFAA0B;;6FDK7B,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEZD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Plateau } from './core/models/plateau';\nimport { RoverService } from './core/services/rover.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'ukufu-tech-task';\n\n  plateau: Plateau;\n\n  rovers: any[] = [\n    {\n      origin: {\n        coord: { x: 1, y: 2 },\n        orientation: 0,\n      },\n      commandList: ['L', 'M', 'L', 'M', 'L', 'M', 'L', 'M', 'M'],\n      commandInput: 'LMLMLMLMM',\n    },\n    {\n      origin: {\n        coord: { x: 3, y: 3 },\n        orientation: 90,\n      },\n      commandList: ['M', 'M', 'R', 'M', 'M', 'R', 'M', 'R', 'R', 'M'],\n      commandInput: 'MMRMMRMRRM',\n    },\n  ];\n\n  constructor(private roverService: RoverService) {}\n\n  ngOnInit(): void {\n    this.initializeApp();\n  }\n\n  private initializeApp() {\n    // this.addPlateau();\n    // this.addRovers();\n\n    // this.run();\n  }\n\n  addPlateau() {\n    this.plateau = new Plateau({ x: 5, y: 5 });\n  }\n\n  addRovers() {\n    for (let rover of this.rovers) {\n      rover.plateauMap = this.plateau;\n      const r = this.roverService.createRover(rover);\n      r.commandList = rover.commandList;\n    }\n  }\n\n  run() {\n    for (let rover of this.roverService.roverList) {\n      this.roverService.executeRoverCommands(rover);\n    }\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { PlateauModule } from './plateau/plateau.module';\nimport { MaterialModule } from './core/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RoverModule } from './rover/rover.module';\nimport { SimulationComponent } from './simulation/simulation.component';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent, SimulationComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule.forRoot(),\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    PlateauModule,\n    RoverModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoverService } from './services/rover.service';\nimport { MaterialModule } from './material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { PlateauService } from './services/plateau.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, MaterialModule, FlexLayoutModule, ReactiveFormsModule, FormsModule],\n  exports: [MaterialModule, FlexLayoutModule, ReactiveFormsModule, FormsModule],\n})\nexport class CoreModule {\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [PlateauService, RoverService],\n    };\n  }\n}\n","export enum Cardinals {\n  N = 0,\n  E = 90,\n  S = 180,\n  W = 270,\n}\n","export enum Commands {\n  M = 0,\n  L = -90,\n  R = 90,\n}\n","export enum Events {\n  AppStarted,\n  PlateauCreated,\n  RoversCreated,\n  SimulationReset\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDividerModule } from '@angular/material/divider';\n\nconst MaterialModules = [\n  MatToolbarModule,\n  MatCardModule,\n  MatButtonModule,\n  MatDialogModule,\n  MatInputModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatStepperModule,\n  MatDividerModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, MaterialModules],\n  exports: [MaterialModules],\n})\nexport class MaterialModule {}\n","import { IPlateau } from '../interfaces/iplateau';\nimport { IGrid } from '../interfaces/igrid';\nimport { ICoord } from '../interfaces/icoord';\n\nexport class Plateau implements IPlateau {\n\n  grid: IGrid = {\n    bottomLeft: {\n      x: 0,\n      y: 0,\n    },\n    upperRight: null,\n  };\n\n  constructor(upperRight: ICoord) {\n    this.grid.upperRight = Object.assign(new Object(), upperRight);\n  }\n}\n","import { IRover } from '../interfaces/irover';\nimport { IPosition } from '../interfaces/iposition';\nimport { Commands } from '../enums/commands.enum';\nimport { Cardinals } from '../enums/cardinals.enum';\n\nexport class Rover implements IRover {\n  id: number;\n\n  origin: IPosition;\n  position: IPosition;\n\n  commandInput: string = '';\n  commandList: string[] = [];\n\n  get x(): number {\n    return this.position.coord.x;\n  }\n\n  get y(): number {\n    return this.position.coord.y;\n  }\n\n  get orientation(): string {\n    return Cardinals[this.position.orientation];\n  }\n\n  commandError: string = null;\n\n  constructor(data: IRover) {\n    this.id = +Date.now();\n    this.origin = data.origin;\n    this.position = { ...data.origin };\n    this.commandInput = data.commandInput;\n    this.commandList = this.commandInput.split('');\n  }\n\n  public prepareCommand(cmd: string): IPosition {\n\n    // Prepare command to be executed\n    // Return nextPosition of rover\n\n    const cmdValue = Commands[cmd];\n\n    console.log('cmdValue', cmdValue);\n\n    if (cmdValue === Commands.M) {\n      switch (this.position.orientation) {\n        case Cardinals.N:\n          return {\n            coord: { x: this.x, y: this.y + 1 },\n            orientation: this.position.orientation,\n          };\n        case Cardinals.E:\n          return {\n            coord: { x: this.x + 1, y: this.y },\n            orientation: this.position.orientation,\n          };\n        case Cardinals.S:\n          return {\n            coord: { x: this.x, y: this.y - 1 },\n            orientation: this.position.orientation,\n          };\n        case Cardinals.W:\n          return {\n            coord: { x: this.x - 1, y: this.y },\n            orientation: this.position.orientation,\n          };\n      }\n    } else {\n      const position = { ...this.position };\n      position.orientation = this.toCardinalEnum(position.orientation + cmdValue);\n      return position;\n    }\n  }\n\n  public moveTo(pos: IPosition) {\n    // Move to newPosition after checks in Service\n\n    console.log('moveTo', pos);\n    this.position = pos;\n  }\n\n  private toCardinalEnum(degree: number) {\n    if (degree < 0) {\n      return degree + 360;\n    } else if (degree >= 360) {\n      return degree - 360;\n    } else {\n      return degree;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Events } from '../enums/events.enum';\nimport { ICoord } from '../interfaces/icoord';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n  events: BehaviorSubject<Events> = new BehaviorSubject(Events.AppStarted);\n\n  constructor() {}\n}\n","import { Injectable } from '@angular/core';\nimport { Plateau } from '../models/plateau';\nimport { IPosition } from '../interfaces/iposition';\nimport { BehaviorSubject } from 'rxjs';\nimport { ICoord } from '../interfaces/icoord';\nimport { AppService } from './app.service';\nimport { Events } from '../enums/events.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlateauService {\n  plateau = null;\n\n  constructor(private appService: AppService) {}\n\n  public createPlateau(coord: ICoord): Plateau {\n    if (this.validatePlateauCoord(coord)) {\n      this.plateau = new Plateau(coord);\n      this.appService.events.next(Events.PlateauCreated);\n      return this.plateau;\n    } else {\n      return null;\n    }\n  }\n\n  public validatePlateauCoord(coord: ICoord) {\n    if (coord.x < 0 || coord.y < 0) {\n      return false;\n    } else if (coord.x === 0 && coord.y === 0) {\n      return false\n    }else{\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Commands } from '../enums/commands.enum';\nimport { Rover } from '../models/rover';\nimport { IPosition } from '../interfaces/iposition';\nimport { IRover } from '../interfaces/irover';\nimport { ICoord } from '../interfaces/icoord';\nimport { PlateauService } from './plateau.service';\nimport { AppService } from './app.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoverService {\n  activeRover: Rover;\n  roverList: Rover[] = [];\n\n  public get events() {\n    return this.appService.events;\n  }\n\n  public get plateau() {\n    return this.plateauService.plateau;\n  }\n\n  constructor(private appService: AppService, private plateauService: PlateauService) {}\n\n  public createRover(rover: IRover): Rover {\n    const newRover = new Rover(rover);\n    if (!this.offGridCheck(newRover.origin.coord)) return null;\n\n    this.roverList.push(newRover);\n    console.log('roverCreated', newRover);\n    return newRover;\n  }\n\n  public removeRover(id: number) {\n    const index = this.roverList.findIndex((x) => x.id === id);\n\n    if (index >= 0) {\n      this.roverList.splice(index, 1);\n    }\n  }\n\n  public executeRoverCommands(rover: Rover): boolean {\n    //Set as active rover\n    this.activeRover = rover;\n    console.log(rover);\n\n    for (let cmd of rover.commandList) {\n      // Prepare command to be executed;\n      const nextPosition: IPosition = rover.prepareCommand(cmd);\n      console.log('nextPosition', nextPosition);\n\n      if (Commands[cmd] === Commands.M) {\n        // If its a movement command, check if the Rover will stay whitin borders\n        // or if it'll collide with another rover\n\n        if (!this.offGridCheck(nextPosition.coord)) {\n          rover.commandError = \"Command error: Can't move offgrid.\";\n          return false;\n        }\n\n        if (!this.collisionCheck(nextPosition.coord)) {\n          rover.commandError = \"Command error: Can't move, collision ahead.\";\n          return false;\n        }\n      }\n\n      // Execute command\n      rover.moveTo(nextPosition);\n    }\n    console.log(`Rover[${rover.id}] commands finished executing.`);\n    return true;\n  }\n\n  public offGridCheck(coord: ICoord) {\n    // Check if Rover will be inside the plateau border\n    // true if clear to move\n\n    const plateau = this.plateauService.plateau;\n\n    if (\n      plateau.grid.bottomLeft.x > coord.x ||\n      plateau.grid.bottomLeft.y > coord.y ||\n      plateau.grid.upperRight.x < coord.x ||\n      plateau.grid.upperRight.y < coord.y\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  public collisionCheck(coord: ICoord) {\n    // Check if Rover will collide with another rover\n    // true if clear to move\n\n    return this.roverList.findIndex((rover) => rover.position.coord.x === coord.x && rover.position.coord.y === coord.y) < 0;\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatStepper } from '@angular/material/stepper';\nimport { AppService } from '../core/services/app.service';\nimport { Events } from '../core/enums/events.enum';\nimport { PlateauFormComponent } from '../plateau/plateau-form/plateau-form.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n  @ViewChild('stepper') stepper: MatStepper;\n  @ViewChild('plateauForm') plateauForm: PlateauFormComponent;\n\n  constructor(private appService: AppService) {}\n\n  ngAfterViewInit(): void {}\n\n  ngOnInit(): void {\n\n    // Observe app events to move throught the stepper\n    \n    this.appService.events.subscribe((val) => {\n      switch (val) {\n        case Events.PlateauCreated:\n          this.goToNextStep();\n          break;\n        case Events.RoversCreated:\n          this.goToNextStep();\n          break;\n        case Events.SimulationReset:\n          this.stepper.selectedIndex = 0;\n          break;\n      }\n    });\n  }\n\n  goToNextStep() {\n    this.stepper.selected.completed = true;\n    this.stepper.next();\n  }\n}\n","<div fxFlex fxLayout=\"column\" fxLayoutGap=\"10px\">\n    <mat-toolbar color=\"primary\">\n        <span> Ukufu Tech Task</span>\n    </mat-toolbar>\n    <div class=\"page-container\" fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"center start\">\n        <mat-card fxFlex=\"50\">\n            <mat-card-header>\n                <mat-card-title>NASA Exploration Mission Simulator</mat-card-title>\n                <mat-card-subtitle>Complete simulation settings to see result</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-horizontal-stepper [linear]=\"true\" #stepper>\n                    <mat-step [completed]=\"false\" [editable]=\"true\">\n                        <ng-template matStepLabel>Plateau</ng-template>\n                        <app-plateau-form #plateauForm></app-plateau-form>\n                    </mat-step>\n                    <mat-step [editable]=\"true\">\n                        <ng-template matStepLabel>Rovers</ng-template>\n                        <app-rover-form #roverForm></app-rover-form>\n                    </mat-step>\n                    <mat-step>\n                        <ng-template matStepLabel>Simulation</ng-template>\n                        <app-simulation></app-simulation>\n                    </mat-step>\n                </mat-horizontal-stepper>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { PlateauService } from '../../core/services/plateau.service';\nimport { Plateau } from '../../core/models/plateau';\nimport { ICoord } from '../../core/interfaces/icoord';\n\n@Component({\n  selector: 'app-plateau-form',\n  templateUrl: './plateau-form.component.html',\n  styleUrls: ['./plateau-form.component.scss'],\n})\nexport class PlateauFormComponent implements OnInit {\n  form: FormGroup;\n  controls = {\n    x: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$')]),\n    y: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$')]),\n  };\n\n  constructor(private fb: FormBuilder, private plateauService: PlateauService) {\n    this.form = this.fb.group(this.controls);\n  }\n\n  ngOnInit(): void {\n\n    // Form validation observer\n    this.form.valueChanges.subscribe((value) => {\n      if (value.x === '0' && value.y === '0') {\n        this.form.setErrors({ sameAsOrigin: true });\n      } else {\n        this.form.setErrors(null);\n      }\n    });\n  }\n\n  nextBtnClick() {\n    //Create ICoord object\n    const { x, y } = this.form.value;\n    const coords: ICoord = {\n      x: +x,\n      y: +y,\n    };\n\n    const plateau: Plateau = this.plateauService.createPlateau(coords);\n\n    if (!plateau) this.form.reset();\n  }\n}\n","<div fxFlex fxLayout=\"column\">\n    <p class=\"mat-body-2\">To create a plateau for the rovers navigation, input the grid coordinates below.<br>\n        Lower left coordinates are locked at (0,0).\n    </p>\n    <form [formGroup]=\"form\">\n        <p class=\"mat-title\">Grid coordinates</p>\n        <div fxLayout=\"row\" fxLayoutGap=\"30px\">\n            <div fxLayout=\"column\">\n                <p class=\"mat-caption\">Lower Left:</p>\n                <div fxLayout=\"row\" fxLayoutGap=\"5px\">\n                    <mat-form-field>\n                        <span matPrefix>(</span>\n                        <input disabled matInput placeholder=\"x\" [value]=\"0\" readonly>\n                        <span matSuffix>,</span>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input disabled matInput placeholder=\"y\" [value]=\"0\" readonly>\n                        <span matSuffix>)</span>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div fxLayout=\"column\">\n                <p class=\"mat-caption\">Upper right:</p>\n                <div fxLayout=\"row\" fxLayoutGap=\"5px\">\n                    <mat-form-field>\n                        <span matPrefix>(</span>\n                        <input matInput placeholder=\"x\" type=\"text\" formControlName=\"x\">\n                        <span matSuffix>,</span>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input matInput placeholder=\"y\" type=\"text\" formControlName=\"y\">\n                        <span matSuffix>)</span>\n                    </mat-form-field>\n                </div>\n                <div class=\"form-error-msg\" *ngIf=\"form.controls['x'].hasError('pattern') || form.controls['y'].hasError('pattern')\">\n                    Only numbers are accepted.\n                </div>\n                <div class=\"form-error-msg\" *ngIf=\"form.hasError('sameAsOrigin')\">\n                    (0, 0) coordinates are invalid.\n                </div>\n            </div>\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end start\">\n            <button (click)=\"nextBtnClick()\" [disabled]=\"!form.valid\" mat-raised-button color=\"accent\">NEXT</button>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlateauFormComponent } from './plateau-form/plateau-form.component';\nimport { CoreModule } from '../core/core.module';\n\n@NgModule({\n  declarations: [PlateauFormComponent],\n  imports: [CommonModule, CoreModule.forRoot()],\n  exports: [PlateauFormComponent],\n})\nexport class PlateauModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Cardinals } from '../../core/enums/cardinals.enum';\nimport { RoverService } from '../../core/services/rover.service';\nimport { IRover } from '../../core/interfaces/irover';\nimport { Events } from '../../core/enums/events.enum';\nimport { Plateau } from '../../core/models/plateau';\n\n@Component({\n  selector: 'app-rover-form',\n  templateUrl: './rover-form.component.html',\n  styleUrls: ['./rover-form.component.scss'],\n})\nexport class RoverFormComponent implements OnInit {\n  roverForms: FormGroup[] = [];\n\n  Cardinals = Cardinals;\n\n  orientationOpts: any[] = [];\n\n  get isFormsValid(): boolean {\n    for (let f of this.roverForms) {\n      if (!f.valid) return false;\n    }\n    return true;\n  }\n\n  get plateau(): Plateau {\n    return this.roverService.plateau;\n  }\n\n  constructor(private fb: FormBuilder, private roverService: RoverService) {}\n\n  ngOnInit(): void {\n    this.orientationOpts = this.buildOptions();\n    this.buildForm();\n  }\n\n  buildOptions() {\n    // Create options for select input based on Cardinal Points enum\n\n    const opts = [];\n    for (let key of Object.keys(Cardinals)) {\n      if (isNaN(+key)) {\n        // Make sure to only get string keys\n        const opt = { name: key, value: Cardinals[key] };\n        opts.push(opt);\n      }\n    }\n    return opts;\n  }\n\n  buildForm() {\n    const controls = {\n      x: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$')]),\n      y: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$')]),\n      orientation: new FormControl(null, [Validators.required]),\n      commandInput: new FormControl('', [Validators.required, Validators.pattern('^[MmLlRr]*$')]),\n    };\n\n    const form = this.fb.group(controls);\n\n    // Observe if origin coordinates of rover are valid\n    form.valueChanges.subscribe((val) => {\n      if (val.x && val.y) {\n        const check = this.roverService.offGridCheck({ x: +val.x, y: +val.y });\n        console.log('check off grid', check);\n        if (!check) {\n          form.setErrors({ offGrid: true });\n        } else {\n          form.setErrors(null);\n        }\n      }\n    });\n\n    // Set command input to uppercase\n    form.controls['commandInput'].valueChanges.subscribe((v: string) => {\n      if (v) {\n        const value = v.toUpperCase();\n        form.controls['commandInput'].setValue(value, { emitEvent: false });\n      }\n    });\n\n    this.roverForms.push(form);\n  }\n\n  addRoverFormBtnClick() {\n    this.buildForm();\n  }\n\n  removeRoverFormBtnClick(index: number) {\n    this.roverForms.splice(index, 1);\n  }\n\n  removeLastCommandBtnClick(index: number) {\n    const ctrl = this.roverForms[index].controls['commandInput'];\n    if (ctrl.value.length) ctrl.setValue(ctrl.value.slice(0, -1));\n  }\n\n  addCommandBtnClick(index: number, cmd: string) {\n    const ctrl = this.roverForms[index].controls['commandInput'];\n    ctrl.setValue(ctrl.value + cmd);\n  }\n\n  nextBtnClick() {\n    // if all rovers created emit event\n    if (this.createRoversFromForms()) {\n      this.roverService.events.next(Events.RoversCreated);\n    }\n  }\n\n  private createRoversFromForms(): boolean {\n    this.roverService.roverList = [];\n\n    for (let form of this.roverForms) {\n      const { x, y, orientation, commandInput } = form.value;\n\n      const roverData: IRover = {\n        origin: { coord: { x: +x, y: +y }, orientation: +orientation },\n        commandInput: commandInput,\n      };\n\n      console.log('roverData', roverData);\n\n      const rover = this.roverService.createRover(roverData);\n      if (!rover) return;\n    }\n    this.roverService.events.next(Events.RoversCreated);\n    return true;\n  }\n}\n","<div fxFlex>\n    <p class=\"mat-body-2\">List of Rovers in this simulation</p>\n    <ng-container *ngFor=\"let f of roverForms; let i = index;\">\n        <div class=\"form-group\">\n            <p class=\"mat-title\">Rover #{{ i + 1 }}</p>\n            <ng-container [ngTemplateOutlet]=\"roverFormTmp\" [ngTemplateOutletContext]=\"{form: f, index: i}\"></ng-container>\n        </div>\n    </ng-container>\n    <div class=\"form-actions\" fxLayout=\"row\" fxLayoutAlign=\"end start\" fxLayoutGap=\"10px\">\n        <button mat-stroked-button (click)=\"addRoverFormBtnClick()\" color=\"primary\">ADD NEW</button>\n        <button mat-raised-button [disabled]=\"!isFormsValid\" color=\"accent\" (click)=\"nextBtnClick()\">NEXT</button>\n    </div>\n</div>\n\n<ng-template #roverFormTmp let-form=\"form\" let-index=\"index\">\n    <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n        <form class=\"rover-form\" [formGroup]=\"form\">\n            <p>Deploy coordinates and orientation</p>\n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n                <div class=\"coord-form-field\" fxLayout=\"row\" fxLayoutGap=\"5px\">\n                    <mat-form-field>\n                        <span matPrefix>(</span>\n                        <input matInput placeholder=\"x\" type=\"text\" formControlName=\"x\" required>\n                        <span matSuffix>,</span>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input matInput placeholder=\"y\" type=\"text\" formControlName=\"y\" required>\n                        <span matSuffix>)</span>\n                    </mat-form-field>\n                    <mat-form-field fxFlex>\n                        <mat-label>Orientation</mat-label>\n                        <mat-select placeholder=\"N\" formControlName=\"orientation\" required>\n                            <mat-option *ngFor=\"let cardinal of orientationOpts\" [value]=\"cardinal.value\">\n                                {{cardinal.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <span *ngIf=\"form.hasError('offGrid')\" class=\"mat-caption form-error\">Coordinates must be between (0,0) and\n                    ({{ plateau.grid.upperRight.x }}, {{ plateau.grid.upperRight.y }})</span>\n                <div class=\"command-form-field\" fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start baseline\">\n                    <mat-form-field fxFlex>\n                        <input class=\"command-input\" matInput placeholder=\"Command input\" type=\"text\" formControlName=\"commandInput\"\n                            required>\n                    </mat-form-field>\n                    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n                        <button mat-stroked-button color=\"primary\" (click)=\"removeLastCommandBtnClick(index)\">-</button>\n                        <button mat-stroked-button color=\"primary\" (click)=\"addCommandBtnClick(index, 'M')\">M</button>\n                        <button mat-stroked-button color=\"primary\" (click)=\"addCommandBtnClick(index, 'L')\">L</button>\n                        <button mat-stroked-button color=\"primary\" (click)=\"addCommandBtnClick(index, 'R')\">R</button>\n                    </div>\n                </div>\n                <div>\n                    <span class=\"mat-caption\" [ngClass]=\"[form.controls['commandInput'].hasError('pattern') ? 'form-error' : '']\">Valid\n                        command\n                        inputs: M, L or R</span>\n                </div>\n            </div>\n        </form>\n        <div fxLayout=\"row\">\n            <button mat-stroked-button color=\"warn\" (click)=\"removeRoverFormBtnClick(index)\">REMOVE</button>\n        </div>\n        <mat-divider inset></mat-divider>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoverFormComponent } from './rover-form/rover-form.component';\nimport { CoreModule } from '../core/core.module';\n\n@NgModule({\n  declarations: [RoverFormComponent],\n  imports: [CommonModule, CoreModule.forRoot()],\n  exports: [RoverFormComponent],\n})\nexport class RoverModule {}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Cardinals } from '../core/enums/cardinals.enum';\nimport { RoverService } from '../core/services/rover.service';\nimport { Rover } from '../core/models/rover';\nimport { Events } from '../core/enums/events.enum';\nimport { Plateau } from '../core/models/plateau';\nimport { PlateauService } from '../core/services/plateau.service';\n\n@Component({\n  selector: 'app-simulation',\n  templateUrl: './simulation.component.html',\n  styleUrls: ['./simulation.component.scss'],\n})\nexport class SimulationComponent implements OnInit {\n  simulations: any[] = null;\n\n  Cardinals = Cardinals;\n\n  simulationStarted = false;\n  simulationError = false;\n  simulationDone = false;\n\n  public get plateau(): Plateau {\n    return this.plateauService.plateau;\n  }\n\n  constructor(private plateauService: PlateauService, private roverService: RoverService) {}\n\n  ngOnInit(): void {\n    this.roverService.events.subscribe((val) => {\n      if (val === Events.RoversCreated) {\n        this.prepareSimulations(this.roverService.roverList);\n      }\n    });\n  }\n\n  prepareSimulations(rovers: Rover[]) {\n    this.simulations = rovers.map((rover) => {\n      const simulation = { rover: rover, result: null };\n      return simulation;\n    });\n  }\n\n  runSimulation() {\n    console.log('runSimulation', this.roverService.roverList);\n\n    this.simulationStarted = true;\n    this.simulations.forEach((s, i) => {\n      s.result = this.roverService.executeRoverCommands(s.rover);\n      if (!s.result) this.simulationError = true;\n    });\n\n    this.simulationDone = true;\n  }\n\n  restartSimulation() {\n    this.simulationStarted = false;\n    this.simulationError = false;\n    this.simulationDone = false;\n\n    this.plateauService.plateau = null;\n    this.roverService.roverList = null;\n\n    this.roverService.events.next(Events.SimulationReset);\n  }\n}\n","<div fxFlex fxLayout=\"column\" fxLayoutGap=\"10px\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <ng-container *ngFor=\"let s of simulations; let index = index;\">\n            <ng-container [ngTemplateOutlet]=\"simulationResult\" [ngTemplateOutletContext]=\"{ rover: s.rover, index: index }\"></ng-container>\n        </ng-container>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"end start\">\n        <button *ngIf=\"simulationDone\" mat-stroked-button (click)=\"restartSimulation()\" color=\"warn\">RESET</button>\n        <button *ngIf=\"!simulationStarted\" mat-raised-button (click)=\"runSimulation()\" color=\"accent\">START</button>\n    </div>\n</div>\n\n<ng-template #simulationResult let-rover=\"rover\" let-index=\"index\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Rover #{{index + 1}}</mat-card-title>\n            <mat-card-subtitle>Results</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <div fxLayout=\"column\">\n                <div>\n                    <p>\n                        <span class=\"mat-body-2\">Grid input:</span><br>\n                        <span>{{ plateau.grid.upperRight.x }} {{ plateau.grid.upperRight.y }}</span><br>\n                        <span class=\"mat-body-2\">Rover Input:</span><br>\n                        <span>{{ rover.origin.coord.x}} {{ rover.origin.coord.y}} {{ Cardinals[rover.origin.orientation] }}\n                            {{ rover.commandInput }}</span>\n                    </p>\n                </div>\n            </div>\n            <div>\n                <p *ngIf=\"simulations[index].result === null\">\n                    <span class=\"mat-body-2\">Output:</span><br>\n                    <span>Waiting simulation start...</span><br>\n                </p>\n                <p *ngIf=\"simulations[index].result\">\n                    <span class=\"mat-body-2\">Output:</span><br>\n                    <span class=\"cmd-success\">{{ rover.position.coord.x}} {{ rover.position.coord.y}}\n                        {{ Cardinals[rover.origin.orientation] }}</span>\n                </p>\n                <p *ngIf=\"!simulations[index].result && simulations[index].rover.commandError\">\n                    <span class=\"mat-body-2\">Last position:</span><br>\n                    <span>{{ rover.position.coord.x}} {{ rover.position.coord.y}} {{ Cardinals[rover.origin.orientation] }}</span><br>\n                    <span class=\"cmd-error\">{{ simulations[index].rover.commandError }}</span>\n                </p>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</ng-template>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}